#!/bin/bash

##
# Thi will check for GPG_AGENT_INFO in the environment and if it's
# set, make sure gpg-agent is actually running. (I'm not yet sure how
# this interacts with other gpg-agent implementations like GNOME's
# agent). If the agent info is set but the agent is not running it
# doesn't know how to cope and gives up.
#
# If the agent info isn't set it checks to see if the agent is
# running. If it is, it looks for the env info in a couple of well
# known locations and if it fails to find it, gives up.
#
# If the agent isn't running and the agent info is unset, it starts an
# agent, writes the env file to a private location, and proceeds.
#
# To say that I'm unhappy with this horrible, user-hostile and
# unreliable hack is an understatement.
#
# It's very surprising that gpg, a security/crypto tool, will ignore
# arguments and proceed. --use-agent should be a fatal error if an
# agent is not running, at least optionally, much as specifying -r
# with an invalid recipient should be an error rather than ignored.
# The fact that gpg finds its agent a different way to the gpg-agent
# command is bewildering.
#
# Credit: https://serverfault.com/users/102814/craig-ringer
# See: https://serverfault.com/questions/481103/gpg-agent-says-agent-exists-but-gpg-says-agent-doesnt-exist
##

if ! test -v GPG_AGENT_INFO; then
    if gpg-agent 2>/dev/null; then
        if test -e /tmp/.gpg-agent-$USER/env; then
            . /tmp/.gpg-agent-$USER/env
        elif test -e ~/.gpg-agent-info; then
            . ~/.gpg-agent-info
        else
            echo 'A gpg agent is running, but we cannot find its socket info because'
            echo 'the GPG_AGENT_INFO env var is not set and gpg agent info has not been'
            echo 'written to any expected location. Cannot continue. Please report this'
            echo 'issue for investigation.'
            exit 5
        fi
    else
        mkdir /tmp/.gpg-agent-$USER
        chmod 700 /tmp/.gpg-agent-$USER
        gpg-agent --daemon /tmp/.gpg-agent-$USER/env
        . /tmp/.gpg-agent-$USER/env
    fi
    # The env file doesn't include an export statement
    export GPG_AGENT_INFO
else
    if ! gpg-agent 2>/dev/null; then
        echo 'GPG_AGENT_INFO is set, but cannot connect to the agent.'
        echo 'Unsure how to proceed, so aborting execution. Please report this'
        echo 'issue for investigation.'
        exit 5
    fi
fi
